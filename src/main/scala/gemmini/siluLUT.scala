package gemmini
import chisel3._
import chisel3.util._

class siluLUT extends Module {
  val io = IO(new Bundle {
    val indexIn = Input(UInt(7.W))  // 7-bit index
    val valueOut = Output(UInt(16.W)) // BF16 output
  })

  val lut = VecInit(Seq(   // indices 0 to 127
    "b0000000000000000".U, // 0000000
    "b0011110100000011".U, // 0000001
    "b0011110110000111".U, // 0000010
    "b0011110111010001".U, // 0000011
    "b0011111000001111".U, // ...
    "b0011111000111000".U,
    "b0011111001100011".U,
    "b0011111010001000".U, // index 7: x-value: 0.4375; silu-value 0.265625
    "b0011111010011111".U,
    "b0011111010110111".U,
    "b0011111011010000".U,
    "b0011111011101010".U,
    "b0011111100000010".U,
    "b0011111100010000".U,
    "b0011111100011110".U,
    "b0011111100101100".U,
    "b0011111100111011".U,
    "b0011111101001010".U,
    "b0011111101011001".U,
    "b0011111101101000".U,
    "b0011111101111000".U,
    "b0011111110000100".U,
    "b0011111110001100".U,
    "b0011111110010100".U,
    "b0011111110011100".U,
    "b0011111110100101".U,
    "b0011111110101101".U,
    "b0011111110110110".U,
    "b0011111110111110".U,
    "b0011111111000111".U,
    "b0011111111010000".U,
    "b0011111111011000".U,
    "b0011111111100001".U,
    "b0011111111101010".U,
    "b0011111111110010".U,
    "b0011111111111011".U,
    "b0100000000000010".U,
    "b0100000000000110".U,
    "b0100000000001011".U,
    "b0100000000001111".U,
    "b0100000000010011".U,
    "b0100000000011000".U,
    "b0100000000011100".U,
    "b0100000000100001".U,
    "b0100000000100101".U,
    "b0100000000101001".U,
    "b0100000000101110".U,
    "b0100000000110010".U,
    "b0100000000110110".U,
    "b0100000000111011".U,
    "b0100000000111111".U,
    "b0100000001000011".U,
    "b0100000001001000".U,
    "b0100000001001100".U,
    "b0100000001010000".U,
    "b0100000001010101".U,
    "b0100000001011001".U,
    "b0100000001011101".U,
    "b0100000001100001".U,
    "b0100000001100110".U,
    "b0100000001101010".U,
    "b0100000001101110".U,
    "b0100000001110010".U,
    "b0100000001110111".U, // index 63: 0111111 (this is x-value: +3.9375)
    "b0000000000000000".U, // index 64: 1000000 (this is x-value: -0)
    "b1011110011111000".U, // index 65: 1000001 (this is x-value: -0.0625)
    "b1011110101110000".U,
    "b1011110110101110".U,
    "b1011110111100000".U,
    "b1011111000000111".U,
    "b1011111000011100".U,
    "b1011111000101111".U,
    "b1011111001000001".U,
    "b1011111001010001".U,
    "b1011111001011111".U,
    "b1011111001101011".U, // index 75: 1001011 (this is x-value: -0.6875) output silu-value: -0.22949219
    "b1011111001110110".U,
    "b1011111001111111".U, // index 77: 1001101 (this is x-value: -0.8125) output silu-value: -0.2490234375)
    "b1011111010000011".U,
    "b1011111010000111".U,
    "b1011111010001001".U,
    "b1011111010001011".U,
    "b1011111010001101".U,
    "b1011111010001110".U,
    "b1011111010001110".U,
    "b1011111010001110".U,
    "b1011111010001110".U,
    "b1011111010001101".U,
    "b1011111010001100".U,
    "b1011111010001010".U,
    "b1011111010001000".U,
    "b1011111010000110".U,
    "b1011111010000100".U,
    "b1011111010000010".U,
    "b1011111001111111".U,
    "b1011111001111001".U,
    "b1011111001110100".U,
    "b1011111001101110".U,
    "b1011111001101000".U,
    "b1011111001100001".U,
    "b1011111001011011".U,
    "b1011111001010101".U,
    "b1011111001001110".U,
    "b1011111001001000".U,
    "b1011111001000010".U,
    "b1011111000111011".U,
    "b1011111000110101".U,
    "b1011111000101111".U,
    "b1011111000101001".U,
    "b1011111000100011".U,
    "b1011111000011101".U,
    "b1011111000010111".U,
    "b1011111000010001".U,
    "b1011111000001100".U,
    "b1011111000000110".U,
    "b1011111000000001".U,
    "b1011110111111000".U,
    "b1011110111101110".U,
    "b1011110111100100".U,
    "b1011110111011011".U,
    "b1011110111010010".U,
    "b1011110111001001".U,
    "b1011110111000000".U,
    "b1011110110111000".U,
    "b1011110110110000".U,
    "b1011110110101000".U,
    "b1011110110100001".U,
    "b1011110110011010".U // index 127: 1111111 (this is -3.9375)
  ))
  io.valueOut := lut(io.indexIn)
}